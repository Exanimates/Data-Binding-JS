"use script";
var Mount = function (mount, initial)
    {
	    this.mount = mount;
	    this.initial = initial;
	};	

sub=[];
		Mount.prototype.subscribe = function(fn)
		{
			sub.push(fn);
		};
Mount.prototype.set = function(key, value)
            {		
		          key = key.split(".");
		       if  (key.length == 1)
		         this.initial[key] = value;
		       else			   
			 {				
				var object = this.initial;
				for (var i=0;i<key.length;i++)
					{
						if (typeof object[key[i]]!='object' && typeof object[key[i]]!='undefined')
							object[key[i]] = value;
						else							
						   object = object[key[i]];							
					}
			 } 
	  sub.forEach(l=>l(key,value));
    };
Mount.prototype.get = function(key)
{
	
};
            
 
Mount.prototype.toObject = function()
{
    return this.initial;
};
    